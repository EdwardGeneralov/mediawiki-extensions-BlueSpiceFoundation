{
	"@metadata": {
		"authors": [
			"Robert Vogel <vogel@hallowelt.biz>"
		]
	},
	"apihelp-bs-filebackend-store-description": "Lists all files from the file backend. Allows sorting, filtering and pagination. Implements ExtJS Store parameters.",
	"apihelp-bs-user-store-description": "Lists all users from the database. Allows sorting, filtering and pagination. Implements ExtJS Store parameters.",
	"apihelp-bs-group-store-description": "Lists all groups except $wgImplicitGroups. Allows sorting, filtering and pagination. Implements ExtJS Store parameters.",
	"apihelp-bs-store-param-sort": "JSON string with sorting info; deserializes to <code>array of objects</code> that hold field name and direction for each sorting option",
	"apihelp-bs-store-param-group": "JSON string with grouping info; deserializes to <code>array of objects</code> that hold field name and direction for each grouping option",
	"apihelp-bs-store-param-filter": "JSON string with filter info; deserializes to <code>array of objects</code> that hold field name, filter type, and filter value for each filtering option",
	"apihelp-bs-store-param-page": "Allows server side calculation of start/limit",
	"apihelp-bs-store-param-limit": "Number of results to return",
	"apihelp-bs-store-param-start": "The offset to start the result list from",
	"apihelp-bs-store-param-callback": "A method name in the client code that should be called in the response (JSONP)",
	"apihelp-bs-store-param-query": "Similar to <var>filter</var>, but the provided value serves as a filter only for the <var>value</var> field of an ExtJS component",
	"apihelp-bs-store-param-dc": "<code>Disable cache</code> flag",
	"apihelp-bs-store-param-format": "The format of the output (only JSON or formatted JSON)",
	"apihelp-bs-task-param-task": "The task that should be executed",
	"apihelp-bs-task-param-taskdata": "JSON string encoded object with arbitrary data for the task",
	"apihelp-bs-task-param-format": "The format of the result"
}